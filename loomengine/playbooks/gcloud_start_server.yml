---
- name: Start the Loom server.
  hosts: "{{lookup('env','SERVER_NAME')}}"
  become: yes
  vars:
    remote_loom_settings_path: "{{ansible_env.HOME}}/{{lookup('env', 'LOOM_HOME_SUBDIR')}}"
    local_loom_settings_path: "{{lookup('env','HOME')}}/{{lookup('env', 'LOOM_HOME_SUBDIR')}}"
    docker_full_name: "{{lookup('env', 'DOCKER_FULL_NAME')}}"
    external_port: "{{lookup('env', 'EXTERNAL_PORT')}}"
    protocol: "{{lookup('env', 'PROTOCOL')}}"
  tasks:
  - name: Start the Loom server.
    docker_container:
      name: loom
      image: "{{docker_full_name}}"
      ports: 8000:8000
      volumes: "{{remote_loom_settings_path}}:{{remote_loom_settings_path}}"
      hostname: "{{ansible_hostname}}"
      restart_policy: always
      api_version: auto
      command: /bin/bash -c 'source /opt/loom/bin/activate && loom server set local && loom server start --foreground --verbose'
  - name: Start NGINX.
    docker_container:
      name: nginx
      image: nginx:stable
      network_mode: host
      volumes: /var/log/nginx:/var/log/nginx,{{remote_loom_settings_path}}/nginx.conf:/etc/nginx/conf.d/default.conf,{{remote_loom_settings_path}}/ssl:/etc/nginx/ssl
      restart_policy: always
      api_version: auto
  - name: Wait for Loom server port to be available.
    wait_for: port={{external_port}}
  - name: Wait for Loom server status API call to return 200.
    uri: url={{protocol}}://{{ansible_hostname}}:{{external_port}}/api/status/ validate_certs=False
    register: response
    until: response.status == 200
    retries: 30
    delay: 10
